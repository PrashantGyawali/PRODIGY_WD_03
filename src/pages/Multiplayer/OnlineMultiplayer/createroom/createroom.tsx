import React, { useState } from 'react';
import { AnimatePresence,motion } from 'framer-motion';
import './createroom.css';
export default function CreateRoomPage() {
    const [roomCode, setRoomCode] = useState('');
    const [roomPass, setRoomPass] = useState('');
    const [showCopyButton, setShowCopyButton] = useState(false);
    const [minutes, setMinutes] = useState(2);
    const [seconds, setSeconds] = useState(30);

    const handleRoomCodeChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setRoomCode(event.target.value);
    };

    const handleMinutesChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        const value = parseInt(event.target.value);
        if (value >= 0 && value <= 4) {
            setMinutes(value);
            return;
        }
        if (!value){
            setMinutes(0);
            return;
        }
        if(value>4){
            setMinutes(4);
        }
    };

    const handleSecondsChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        const value = parseInt(event.target.value);
        if (value >= 0 && value <= 59) {
            setSeconds(value);
            return;
        }
        if (!value){
            setSeconds(0);
        }
        if(value>59){
            setSeconds(59);
        }
    };

    const handleCopyButtonClick = () => {
        navigator.clipboard.writeText(roomCode);
        // Logic to copy room code
    };

    const handleRoomPassChange = (event: React.ChangeEvent<HTMLInputElement>) => {
        setRoomPass(event.target.value);
        // Logic to set room password
    }

    const totalSeconds = minutes * 60 + seconds;
    const errorText = totalSeconds < 30?"* Total time must be greater than 30 seconds.": totalSeconds>270?"* Total Total time must be less than 4:30 mins.":"";

    return (
        <AnimatePresence mode="wait">
        <motion.div key={location.pathname}
        initial={{transform:" translateY(-70%) scaleY(0.2)"}}
        animate={{transform:"translateY(0%) scaleY(100%)"}}
        exit={{opacity:0}}
        transition={{ duration: 1.2 }}
        className='flexcenter'
        >
            <div className=' borderanimation roomdatadiv' style={{width:"100%"}}>
            <span className='text-left'>Room Code</span>
            <div>
                <input type="text" className='roomCodeInput' value={roomCode} onChange={handleRoomCodeChange} placeholder="Autogenerated"/>
                {showCopyButton && (
                    <button onClick={handleCopyButtonClick}>
                        <i className="copy-icon">Copy</i>
                    </button>
                )}
            </div>
            <span className='text-left'>Password</span>
            <div>
                <input type="text" className='roomCodeInput' value={roomPass} onChange={handleRoomPassChange} placeholder="Optional"/>
            </div>
            
            <div>
                <label>Game Duration (min:sec) :</label>
                <div className="d-flex">
                    <input type="number" value={minutes} onChange={handleMinutesChange}/>
                    <span>:</span>
                    <input type="number" value={seconds} onChange={handleSecondsChange} />
                </div>
            </div>
            {errorText!="" && <span className='error'>{errorText}</span>}
        </div>
        </motion.div>
      
      </AnimatePresence>
        
    );
}

